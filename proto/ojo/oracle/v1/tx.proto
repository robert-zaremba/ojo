syntax = "proto3";
package ojo.oracle.v1;

import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";
import "gogoproto/gogo.proto";
import "ojo/oracle/v1/oracle.proto";

option go_package = "github.com/ojo-network/ojo/x/oracle/types";

option (gogoproto.goproto_getters_all) = false;

// Msg defines the oracle Msg service.
service Msg {
  // AggregateExchangeRatePrevote defines a method for submitting an aggregate
  // exchange rate prevote.
  rpc AggregateExchangeRatePrevote(MsgAggregateExchangeRatePrevote)
      returns (MsgAggregateExchangeRatePrevoteResponse);

  // AggregateExchangeRateVote defines a method for submitting an aggregate
  // exchange rate vote.
  rpc AggregateExchangeRateVote(MsgAggregateExchangeRateVote)
      returns (MsgAggregateExchangeRateVoteResponse);

  // DelegateFeedConsent defines a method for setting the feeder delegation.
  rpc DelegateFeedConsent(MsgDelegateFeedConsent)
      returns (MsgDelegateFeedConsentResponse);

  // GovUpdateParams updates the oracle parameters.
  rpc GovUpdateParams(MsgGovUpdateParams)
      returns (MsgGovUpdateParamsResponse);

  // GovCancelUpdateParams cancels a plan to update the oracle parameters.
  rpc GovCancelUpdateParams(MsgGovCancelUpdateParams)
      returns (MsgGovCancelUpdateParamsResponse);
}

// MsgAggregateExchangeRatePrevote represents a message to submit an aggregate
// exchange rate prevote.
message MsgAggregateExchangeRatePrevote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string hash = 1 [ (gogoproto.moretags) = "yaml:\"hash\"" ];
  // Feeder is the author and the signer of the message.
  string feeder = 2 [ (gogoproto.moretags) = "yaml:\"feeder\"" ];
  string validator = 3 [ (gogoproto.moretags) = "yaml:\"validator\"" ];
}

// MsgAggregateExchangeRatePrevoteResponse defines the
// Msg/AggregateExchangeRatePrevote response type.
message MsgAggregateExchangeRatePrevoteResponse {}

// MsgAggregateExchangeRateVote represents a message to submit anaggregate
// exchange rate vote.
message MsgAggregateExchangeRateVote {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  string salt = 1 [ (gogoproto.moretags) = "yaml:\"salt\"" ];
  string exchange_rates = 2
      [ (gogoproto.moretags) = "yaml:\"exchange_rates\"" ];
  // Feeder is the author and the signer of the message.
  string feeder = 3 [ (gogoproto.moretags) = "yaml:\"feeder\"" ];
  string validator = 4 [ (gogoproto.moretags) = "yaml:\"validator\"" ];
}

// MsgAggregateExchangeRateVoteResponse defines the
// Msg/AggregateExchangeRateVote response type.
message MsgAggregateExchangeRateVoteResponse {}

// MsgDelegateFeedConsent represents a message to delegate oracle voting rights
// to another address.
message MsgDelegateFeedConsent {
  option (gogoproto.equal) = false;
  option (gogoproto.goproto_getters) = false;

  // Operator is the author and the signer of the message.
  string operator = 1 [ (gogoproto.moretags) = "yaml:\"operator\"" ];
  string delegate = 2 [ (gogoproto.moretags) = "yaml:\"delegate\"" ];
}

// MsgDelegateFeedConsentResponse defines the Msg/DelegateFeedConsent response
// type.
message MsgDelegateFeedConsentResponse {}

// MsgGovUpdateParams defines the Msg/GovUpdateParams request type.
message MsgGovUpdateParams {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;
  option (cosmos.msg.v1.signer)       = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // title of the proposal
  string title = 2;

   // description of the proposal
  string description = 3;

  // plan is the param update plan
  ParamUpdatePlan plan = 4 [(gogoproto.nullable) = false];
}

// MsgGovUpdateParamsResponse defines the Msg/GovUpdateParams response type.
message MsgGovUpdateParamsResponse {}

// MsgGovCancelUpdateParams defines the Msg/GovCancelUpdateParams request type.
message MsgGovCancelUpdateParams {
  option (gogoproto.equal)            = true;
  option (gogoproto.goproto_getters)  = false;
  option (gogoproto.goproto_stringer) = false;
  option (cosmos.msg.v1.signer) = "authority";

  // authority is the address of the governance account.
  string authority = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];

  // title of the proposal
  string title = 2;

   // description of the proposal
  string description = 3;
}

// MsgGovCancelUpdateParamsResponse defines the Msg/GovCancelUpdateParamsResponse response type.
message MsgGovCancelUpdateParamsResponse {}
